{"version":3,"sources":["Components/Contexts.js","Components/FinalScreen/FinalScreen.js","Components/QuestionsDemo.js","Components/Exam/Exam.js","Components/StartExam/StartExam.js","Components/Login/Login.js","Components/Result/Result.js","App.js","index.js"],"names":["QuizContext","createContext","FinalScreen","useContext","score","setScore","Box","sx","p","border","backgroundColor","borderRadius","Typography","variant","color","mt","textAlign","Questions","id","prompt","optionA","optionB","optionC","optionD","asnwer","Exam","finishExam","setFinishExam","useState","currentQuestion","setCurrentQuestions","optionChoosed","setOptionChoosed","isChoosed","setIsChoosed","chooseOption","option","console","log","Container","Provider","value","className","m","marginBottom","boxShadow","display","alignItems","Button","onClick","justifyContent","length","StartExam","sussessLogged","setSussessLogged","flexDirection","mb","size","Login","fullname","email","password","formValues","setFormValues","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","handleChange","e","target","name","validate","values","errors","test","renderForm","onSubmit","preventDefault","fontWeight","type","placeholder","onChange","htmlFor","Object","keys","Result","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d4c2cbf.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const QuizContext = createContext(\"\");","import { Box, Typography } from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport {QuizContext} from '../Contexts';\r\n\r\nconst FinalScreen = () => {\r\n      const {score , setScore} = useContext(QuizContext);\r\n      return (\r\n            <Box sx={{p:5, border : \"1px solid #eee\" , backgroundColor : \"#f7f7f7\" , borderRadius:3}}>\r\n                  <Typography variant='h3' color=\"#13b113\">Total Score !</Typography>\r\n                  <Typography mt={5} variant='h3' textAlign=\"center\" color=\"#13b113\">{score} / 5 </Typography>\r\n            </Box>\r\n      )\r\n}\r\n\r\nexport default FinalScreen;","export const Questions = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tprompt: \"Which of this is not a javascript framework?\",\r\n\t\toptionA: \"React\",\r\n\t\toptionB: \"Angular\",\r\n\t\toptionC: \"Vue\",\r\n\t\toptionD: \"Java\",\r\n\t\tasnwer: \"optionD\",\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tprompt: \"What command can you use to generate a React project??\",\r\n\t\toptionA: \"react-starter\",\r\n\t\toptionB: \"create-react-app\",\r\n\t\toptionC: \"react-gen\",\r\n\t\toptionD: \"react-start\",\r\n\t\tasnwer: \"optionB\",\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tprompt: \"What syntax do you use to create a component in React?\",\r\n\t\toptionA: \"a generator\",\r\n\t\toptionB: \"a function or a class\",\r\n\t\toptionC: \"a service worker\",\r\n\t\toptionD: \"a tag\",\r\n\t\tasnwer: \"optionB\",\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\tprompt: \"To create a constant in JavaScript, which keyword do you use??\",\r\n\t\toptionA: \"const\",\r\n\t\toptionB: \"let\",\r\n\t\toptionC: \"constant\",\r\n\t\toptionD: \"var\",\r\n\t\tasnwer: \"optionA\",\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\tprompt: \"What is the JavaScript syntax extension that is commonly used to create React elements?\",\r\n\t\toptionA: \"HTML\",\r\n\t\toptionB: \"Javascript\",\r\n\t\toptionC: \"JSX\",\r\n\t\toptionD: \"ES6\",\r\n\t\tasnwer: \"optionC\",\r\n\t},\r\n];\r\n","import { Box, Button, Container, Typography } from \"@mui/material\";\r\nimport { useContext, useState } from \"react\";\r\nimport FinalScreen from \"../FinalScreen/FinalScreen\";\r\nimport {Questions} from '../QuestionsDemo';\r\nimport {QuizContext} from '../Contexts';\r\nimport './Exam.css';\r\n\r\nconst Exam = () => {\r\n      const {finishExam , setFinishExam} = useContext(QuizContext);\r\n      const [ score , setScore ] = useState(0);\r\n      const [currentQuestion , setCurrentQuestions] = useState(0);\r\n      const [optionChoosed , setOptionChoosed] = useState(\"\");\r\n      const [isChoosed , setIsChoosed] = useState(false);\r\n\r\n      const chooseOption = (option) => {\r\n            setOptionChoosed(option)\r\n            setIsChoosed(true);\r\n      }\r\n\r\n      const nextQuestion = () => {\r\n            if(Questions[currentQuestion].asnwer === optionChoosed){\r\n                  setScore(score + 1)\r\n            }\r\n            setCurrentQuestions(currentQuestion + 1);\r\n            setIsChoosed(false);\r\n      };\r\n\r\n      const finalExam = () => {\r\n            if(Questions[currentQuestion].asnwer === optionChoosed){\r\n                  setScore(score + 1)\r\n            }\r\n            setFinishExam(true);\r\n      }\r\n      console.log(score);\r\n      return (\r\n            <Container>\r\n                  {finishExam ? (\r\n                        <QuizContext.Provider value={{score , setScore}}>\r\n                              <FinalScreen />\r\n                        </QuizContext.Provider>\r\n                  ) : (\r\n                        <Container className=\"exam\">\r\n                              <Typography variant=\"h4\" textAlign=\"center\" m={5}>Question {Questions[currentQuestion].id}</Typography>\r\n                  \r\n                              {/* Ques */}\r\n                              <Box  className=\"question\" sx={{marginBottom: \"10px\", p: 2, border: '1px solid #f6f8fa', backgroundColor: \"f6f8fa\" ,borderRadius:2, boxShadow: \"#f6f8fa 0px 1px 2px 0px, #f6f8fa 0px 2px 4px 2px\" , display: \"flex\" , alignItems: \"center\" }}>\r\n                                    <Typography variant=\"h5\">Q{Questions[currentQuestion].id}.  </Typography>\r\n                                    <Typography className=\"ask\">{Questions[currentQuestion].prompt}</Typography>\r\n                              </Box>\r\n\r\n                              {/* Answers */}\r\n                              <Box className=\"choises\">\r\n                                    <Box mt={1} sx={{ border: '1px solid grey' ,borderRadius:3}}>\r\n                                          <Button \r\n                                                onClick={() => chooseOption(\"optionA\")} \r\n                                          >\r\n                                                A . {Questions[currentQuestion].optionA}\r\n                                          </Button>\r\n                                    </Box>\r\n                                    <Box mt={1} sx={{border: '1px solid grey' , borderRadius:3}}>\r\n                                          <Button \r\n                                                onClick={() => chooseOption(\"optionB\")} \r\n                                          >\r\n                                                B . {Questions[currentQuestion].optionB}\r\n                                          </Button>\r\n                                    </Box>\r\n                                    <Box mt={1} sx={{border: '1px solid grey' ,borderRadius:3}}>\r\n                                          <Button \r\n                                                onClick={() => chooseOption(\"optionC\")} \r\n                                          >\r\n                                                C . {Questions[currentQuestion].optionC}\r\n                                          </Button>\r\n                                    </Box>\r\n                                    <Box mt={1} sx={{ border: '1px solid grey' ,borderRadius:3}}>\r\n                                          <Button \r\n                                                onClick={() => chooseOption(\"optionD\")}\r\n                                          >\r\n                                                D . {Questions[currentQuestion].optionD}\r\n                                          </Button>\r\n                                    </Box>\r\n                              </Box>\r\n\r\n                              <Box mt={5} sx={{ display: \"flex\" , justifyContent: \"center\"}} className=\"next-question\">\r\n                                    {currentQuestion === Questions.length - 1 ? (\r\n                                          <Button onClick={finalExam}  variant=\"contained\">\r\n                                                Finish Exam go to Score \r\n                                          </Button>\r\n                                    ) : (\r\n                                          <Box>\r\n                                                { \r\n                                                isChoosed && \r\n                                                      (<Button onClick={nextQuestion}  variant=\"contained\">\r\n                                                      Next Question\r\n                                                      </Button>)\r\n                                                }\r\n                                          </Box>\r\n                                    )}\r\n                                    \r\n                              </Box>\r\n                        </Container>                        \r\n                  )}\r\n            </Container>\r\n            \r\n      )\r\n}\r\n\r\nexport default Exam;","import { Box, Button, Typography } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { QuizContext } from \"../Contexts\";\r\nimport Exam from \"../Exam/Exam\";\r\n\r\nconst StartExam = () => {\r\n\tconst { sussessLogged, setSussessLogged } = useContext(QuizContext);\r\n\treturn (\r\n            <Box>\r\n                  { !sussessLogged ? (\r\n                        <Box display=\"flex\" flexDirection=\"column\">\r\n                              <Typography variant=\"h4\" mb={5}>\r\n                                    Your Exam Today\r\n                              </Typography>\r\n                              <Button \r\n                                    variant=\"contained\" \r\n                                    size=\"large\"\r\n                                    onClick = {() => {\r\n                                          setSussessLogged(true);\r\n                                    }}\r\n                              >\r\n                                    Start Exam\r\n                              </Button>\r\n                        </Box>\r\n                  ) : (\r\n                        <Exam />\r\n                  ) }\r\n            </Box>\r\n\t\t\r\n\t);\r\n};\r\n\r\nexport default StartExam;","import { useState , useContext} from \"react\";\r\nimport './Login.css';\r\nimport {Box, Typography} from '@mui/material';\r\nimport StartExam from \"../StartExam/StartExam\";\r\nimport {QuizContext} from '../Contexts';\r\n\r\nfunction Login() {\r\n\t// User Login info\r\n\tconst database = {\r\n\t\tfullname: \"\",\r\n            email: \"\",\r\n\t\tpassword: \"\",\r\n\t};\r\n      \r\n\tconst [formValues , setFormValues] = useState(database);\r\n      const [errorMessages, setErrorMessages] = useState({});\r\n      const [isSubmitted, setIsSubmitted] = useState(false);\r\n      const [sussessLogged, setSussessLogged] = useState(true);\r\n      const [finishExam, setFinishExam] = useState(true);\r\n\r\n\tconst handleChange = (e) => {\r\n            const {name , value} = e.target;\r\n            setFormValues ({...formValues , [name] : value});\r\n\t};\r\n\r\n      const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            setErrorMessages(validate(formValues));\r\n            setIsSubmitted(true);\r\n\t\tsetSussessLogged(false)\r\n\t\tsetFinishExam(false)\r\n      };\r\n\r\n      const validate = (values) => {\r\n            const errors = {};\r\n            const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n\r\n            if (!values.fullname) {\r\n                  errors.fullname = \"Fullname is required!\";\r\n            }\r\n\r\n            if (!values.email) {\r\n                  errors.email = \"Email is required!\";\r\n            } else if (!regex.test(values.email)){\r\n                  errors.email = \"This is not a valid email format!\";\r\n            }\r\n\r\n            if (!values.password) {\r\n                  errors.password = \"Password is required!\";\r\n            } else if (values.password.length < 4){\r\n                  errors.password = \"Password must be more than 4!\";\r\n            } else if (values.password.length > 10){\r\n                  errors.password = \"Password must be less than 10!\";\r\n            }\r\n            \r\n            return errors;\r\n      }\r\n\r\n\t// JSX code for login form\r\n\tconst renderForm = (\r\n\t\t<Box className=\"form-container\">\r\n\t\t\t<form className=\"form\" onSubmit={handleSubmit}>\r\n                        <Typography variant=\"h3\" fontWeight =\"bold\" textAlign=\"center\">\r\n                              Login\r\n                        </Typography>\r\n                        <div className=\"form__input\">\r\n\t\t\t\t\t<label className=\"form__input--label\">\r\n\t\t\t\t\t\tYour FullName{\"*\"}\r\n                                    <p>{errorMessages.fullname}</p>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"fullname\"\r\n                                    placeholder=\"fullname\"\r\n\t\t\t\t\t\tvalue={formValues.fullname}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form__input\">\r\n\t\t\t\t\t<label className=\"form__input--label\">\r\n\t\t\t\t\t\tYour email address{\"*\"}\r\n                                    <p>{errorMessages.email}</p>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tname=\"email\"\r\n                                    placeholder=\"email\"\r\n\t\t\t\t\t\tvalue={formValues.email}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form__input\">\r\n\t\t\t\t\t<label className=\"form__input--label\">\r\n\t\t\t\t\t\tYour Password{\"*\"}\r\n                                    <p>{errorMessages.password}</p>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n                                    placeholder=\"password\"\r\n\t\t\t\t\t\tvalue={formValues.password}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form__input check__form\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tclassName=\"checkbox\"\r\n\t\t\t\t\t\tid=\"check-label\"\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\tclassName=\"form__input--label\"\r\n\t\t\t\t\t\thtmlFor=\"check-label\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tI read and agree the Terms & Conditions\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form__button\">\r\n\t\t\t\t\t<input type=\"submit\" value=\"Login\" />\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</Box>\r\n\t);\r\n\treturn (\r\n\t\t<Box className=\"login-form\">\r\n\t\t\t{Object.keys(errorMessages).length === 0 && isSubmitted ? (\r\n                        <QuizContext.Provider value={{sussessLogged, setSussessLogged , finishExam, setFinishExam}}>\r\n\t\t\t\t\t<StartExam />\r\n\t\t\t\t</QuizContext.Provider>\r\n\t\t\t) : (\r\n\t\t\t\trenderForm\r\n\t\t\t)}\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default Login;","import React from 'react'\r\n\r\nconst Result = () => {\r\n      return (\r\n            <div>Result page is ready</div>\r\n      )\r\n}\r\n\r\nexport default Result","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useState , useContext} from \"react\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Login from './Components/Login/Login';\nimport Exam from './Components/Exam/Exam';\nimport Result from './Components/Result/Result';\nimport StartQuiz from \"./Components/StartExam/StartExam\";\nimport {QuizContext} from './Components/Contexts';\n\nimport './App.css';\n\nconst App = () => {\n    \n    return ( \n        <Router>\n        {/* <Navbar /> */}\n            <Switch>\n                <Route path=\"/login\" exact>\n                    <Login />\n                </Route>\n                <Route path=\"/StartQuiz\">\n                    <StartQuiz />\n                </Route>\n                <Route path=\"/exam\">\n                    <Exam />\n                </Route>\n                <Route path=\"/result\">\n                    <Result />\n                </Route>\n            </Switch>\n\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( <App /> , document.getElementById('root'));"],"sourceRoot":""}